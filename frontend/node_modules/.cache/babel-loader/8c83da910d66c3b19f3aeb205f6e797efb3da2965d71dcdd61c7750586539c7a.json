{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8010/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const login = async (username, password) => {\n  const response = await api.post('/users/token/', {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const fetchPasses = async () => {\n  const response = await api.get('/passes/passes/');\n  return response.data;\n};\nexport const fetchDepartments = async () => {\n  const response = await api.get('/passes/departments/');\n  return response.data;\n};\nexport const fetchTemplates = async () => {\n  const response = await api.get('/passes/templates/');\n  return response.data;\n};\nexport const createPass = async passData => {\n  const response = await api.post('/passes/passes/', passData);\n  return response.data;\n};\nexport const generateDocument = async passId => {\n  const response = await api.post(`/passes/passes/${passId}/generate_document/`);\n  return response.data;\n};\nexport const sendEmail = async passId => {\n  const response = await api.post(`/passes/passes/${passId}/send_email/`);\n  return response.data;\n};\nexport const downloadPass = async passId => {\n  window.open(`${API_URL}/passes/passes/${passId}/download/`, '_blank');\n};\nexport const performAction = async (passId, action) => {\n  const response = await api.post('/passes/passes/perform_action/', {\n    pass_id: passId,\n    action\n  });\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","username","password","response","post","data","fetchPasses","get","fetchDepartments","fetchTemplates","createPass","passData","generateDocument","passId","sendEmail","downloadPass","window","open","performAction","action","pass_id"],"sources":["/app/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8010/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await api.post('/users/token/', { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchPasses = async () => {\r\n  const response = await api.get('/passes/passes/');\r\n  return response.data;\r\n};\r\n\r\nexport const fetchDepartments = async () => {\r\n  const response = await api.get('/passes/departments/');\r\n  return response.data;\r\n};\r\n\r\nexport const fetchTemplates = async () => {\r\n  const response = await api.get('/passes/templates/');\r\n  return response.data;\r\n};\r\n\r\nexport const createPass = async (passData) => {\r\n  const response = await api.post('/passes/passes/', passData);\r\n  return response.data;\r\n};\r\n\r\nexport const generateDocument = async (passId) => {\r\n  const response = await api.post(`/passes/passes/${passId}/generate_document/`);\r\n  return response.data;\r\n};\r\n\r\nexport const sendEmail = async (passId) => {\r\n  const response = await api.post(`/passes/passes/${passId}/send_email/`);\r\n  return response.data;\r\n};\r\n\r\nexport const downloadPass = async (passId) => {\r\n  window.open(`${API_URL}/passes/passes/${passId}/download/`, '_blank');\r\n};\r\n\r\nexport const performAction = async (passId, action) => {\r\n  const response = await api.post('/passes/passes/perform_action/', { pass_id: passId, action });\r\n  return response.data;\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,eAAe,EAAE;IAAEH,QAAQ;IAAEC;EAAS,CAAC,CAAC;EACxE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMH,QAAQ,GAAG,MAAMf,GAAG,CAACmB,GAAG,CAAC,iBAAiB,CAAC;EACjD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAML,QAAQ,GAAG,MAAMf,GAAG,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACtD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMN,QAAQ,GAAG,MAAMf,GAAG,CAACmB,GAAG,CAAC,oBAAoB,CAAC;EACpD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMR,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,iBAAiB,EAAEO,QAAQ,CAAC;EAC5D,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,MAAMV,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,kBAAkBS,MAAM,qBAAqB,CAAC;EAC9E,OAAOV,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,SAAS,GAAG,MAAOD,MAAM,IAAK;EACzC,MAAMV,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,kBAAkBS,MAAM,cAAc,CAAC;EACvE,OAAOV,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG,MAAOF,MAAM,IAAK;EAC5CG,MAAM,CAACC,IAAI,CAAC,GAAG9B,OAAO,kBAAkB0B,MAAM,YAAY,EAAE,QAAQ,CAAC;AACvE,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOL,MAAM,EAAEM,MAAM,KAAK;EACrD,MAAMhB,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,gCAAgC,EAAE;IAAEgB,OAAO,EAAEP,MAAM;IAAEM;EAAO,CAAC,CAAC;EAC9F,OAAOhB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}